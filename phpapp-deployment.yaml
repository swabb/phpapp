---
apiVersion: v1
kind: Service
metadata:
  name: phpfpm
  namespace: phpapp
  labels:
    app: phpfpm
    tier: backend
spec:
  ports:
  - port: 9000
    targetPort: 9000
  selector:
    app: phpfpm
    tier: backend
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: phpfpm
  namespace: phpapp
  labels:
    app: phpfpm
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: phpfpm
      tier: backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: phpfpm
        tier: backend
    spec:
      containers:
      - name: phpfpm
        image: 217993088031.dkr.ecr.eu-west-2.amazonaws.com/vsadkov-phpapp-phpfpm:latest
        imagePullPolicy: Always
        env:
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: phpapp-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: phpapp-config
              key: DB_PORT
        - name: DB_PASS
          valueFrom:
            configMapKeyRef:
              name: phpapp-config
              key: DB_PASS
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: phpapp-config
              key: DB_USER
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: phpapp-config
              key: DB_NAME
        ports:
        - containerPort: 9000
        resources:
          limits:
            cpu: 20m
            memory: 40Mi
          requests:
            cpu: 10m
            memory: 20Mi
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: phpapp
  labels:
    app: nginx
    tier: backend
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx
    tier: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: phpapp
  labels:
    app: nginx
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
      tier: backend
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: nginx
        tier: backend
    spec:
      containers:
      - name: nginx
        image: 217993088031.dkr.ecr.eu-west-2.amazonaws.com/vsadkov-phpapp-nginx:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 80
        resources:
          limits:
            cpu: 10m
            memory: 20Mi
          requests:
            cpu: 5m
            memory: 5Mi
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: phpapp-ingress
  namespace: phpapp
  annotations:
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
spec:
  tls:
  - hosts:
      - phpapp.sadkov.opsworks.co
    secretName: cert-auth-phpapp
  rules:
    - host: phpapp.sadkov.opsworks.co
      http:
        paths:
          - path: /
            backend:
              serviceName: nginx
              servicePort: 80
